authors  conclude  that  their  results  have  shown  excellent improvement  in  text  data  compression  and  added  levels  of security  over the  existing  methods.  These  improvements  come with additional processing required on the server/node. In (K. Rastogi and K. Sengar, 2014) as in [5] the author discussed about the lossless text data compression algorithms such as Run Length  Encoding,  Huffman  Coding  and  Shanon  Fano  coding. The authors have concluded the article by doing a comparison of these techniques. The authors have also concluded that Huffman technique is most optimal for lossless data compression. M. Sharma(2010)  as in  [6] has  analyzed Huffman algorithm and compare  it  with  other  common  compression  techniques  like Arithmetic,  Lempel  Ziv  Welch(LZW)  and  Run  Length Encoding(RLE). The author has concluded that arithmetic coding is  very  efficient  for  bits  and  reduces  the  file  size dramatically.RLE  is  simple  to  implement  and  fast  o  execute. LZW algorithm is better to use for TIFF, GIF  and Textual Files.  In  (P.  Kumar  A.K.  Varshney,2012)  as  in  [7]  the  authors presented a novel technique that  work on  Huffman  Coding and after getting codeword for the Symbol the authors compress it on the Basis of its Binary no. 0 and 1. The authors have analyzed the results  by  comparing  Double  Huffman  coding  with  Huffman coding and concluded  that  the Double Huffman  coding  despite being costly  provides better results in terms of performance and space saving.  III. PROPOSED SYSTEM  To improve the compression ratio and memory saving percentage for  text  data,  a  lossless  compression  algorithm  named  as "Enhanced  Dynamic  Text  Compression  Algorithm"  is  designed which is  specialized  for text  data. The  basic idea of the devised compression  algorithm  is  the  introduction  of a  new  encoding scheme  which  also  uses  Huffman  coding  technique  for  all redundant words  in text files  to improve the performance of the proposed  system. The  algorithm  has  been  implemented  on  C# platform  with  Visual  Studio  2008  as  an  IDE  (Integrated Development Environment). A. Proposed System Methodology  Enhanced  Dynamic  Text  Compression  algorithm  works  in  two phases  to  compress  the  text  data.  In  the  first  phase  data  is compressed with the help of dynamic bit reduction technique and in  second  phase Huffman coding is used to compress  the dat$